[{"D:\\Coding\\Web\\socialBlog\\client\\src\\index.js":"1","D:\\Coding\\Web\\socialBlog\\client\\src\\App.js":"2","D:\\Coding\\Web\\socialBlog\\client\\src\\reportWebVitals.js":"3","D:\\Coding\\Web\\socialBlog\\client\\src\\Global.js":"4","D:\\Coding\\Web\\socialBlog\\client\\src\\NavBar.js":"5","D:\\Coding\\Web\\socialBlog\\client\\src\\LoginPage.js":"6","D:\\Coding\\Web\\socialBlog\\client\\src\\User.js":"7","D:\\Coding\\Web\\socialBlog\\client\\src\\Posts.js":"8","D:\\Coding\\Web\\socialBlog\\client\\src\\Profile.js":"9"},{"size":331,"mtime":1608834771811,"results":"10","hashOfConfig":"11"},{"size":703,"mtime":1608975440770,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":816,"mtime":1608890687894,"results":"14","hashOfConfig":"11"},{"size":1052,"mtime":1608890134066,"results":"15","hashOfConfig":"11"},{"size":4129,"mtime":1608833524319,"results":"16","hashOfConfig":"11"},{"size":11060,"mtime":1608984041313,"results":"17","hashOfConfig":"11"},{"size":2033,"mtime":1609177737570,"results":"18","hashOfConfig":"11"},{"size":2698,"mtime":1608979144498,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"erywa",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"D:\\Coding\\Web\\socialBlog\\client\\src\\index.js",[],["42","43"],"D:\\Coding\\Web\\socialBlog\\client\\src\\App.js",[],"D:\\Coding\\Web\\socialBlog\\client\\src\\reportWebVitals.js",[],"D:\\Coding\\Web\\socialBlog\\client\\src\\Global.js",[],"D:\\Coding\\Web\\socialBlog\\client\\src\\NavBar.js",["44"],"import {Link,Redirect} from 'react-router-dom';\r\n\r\nfunction Flip({logstate}){\r\n    var text = logstate ? \"Logout\" : \"Login\";\r\n    if(logstate){\r\n        return(<div className='logSys'>\r\n                <Link onClick={() => {localStorage.removeItem('token')}} to='/global' style={{textDecoration:\"none\"}}>\r\n                    {text}\r\n                </Link>\r\n            </div>)\r\n    } else {\r\n        return (\r\n            <div className='logSys'>\r\n                <Link to='/login' style={{textDecoration:\"none\"}}>\r\n                    {text}\r\n                </Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport function NavBar(){\r\n\r\n    var loginState = false\r\n    if(localStorage.getItem('token'))\r\n        loginState = true;\r\n    var headerText = (loginState ? `Home` : \"Public Posts\");\r\n\r\n    return (\r\n        <div className='navbar'>\r\n            <h1>{headerText}</h1>\r\n            <Flip logstate={loginState}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport function Footer(props){\r\n    return(\r\n        <div className='Footer'></div>\r\n    );\r\n}","D:\\Coding\\Web\\socialBlog\\client\\src\\LoginPage.js",["45"],"import React, {useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {Button} from 'reactstrap';\r\n\r\nexport default class LoginPage extends React.Component\r\n{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n        email : \"\",\r\n        username : \"\",\r\n        password : \"\",\r\n        auth : (localStorage.getItem('token') ? true : false)\r\n        };\r\n    this.handleRegister = this.handleRegister.bind(this);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n\r\n    handleRegister(){\r\n        fetch('/registerUser',{\r\n        method : \"POST\",\r\n        headers : {\r\n            'Content-Type' : 'application/json'\r\n        },\r\n        body : JSON.stringify({email : this.state.email, uname : this.state.username, pass : this.state.password})\r\n        }).then(res => res.json()).then(res => {\r\n        //res should have token.\r\n            console.log(res);\r\n            alert(res);\r\n            if(res.err){\r\n                alert(res.err);\r\n            } else if(res.token) {\r\n                alert(res.token);\r\n                console.log(res.token);\r\n                this.setState((s,p) => {\r\n                    return Object.assign(s,{auth : true});\r\n                }, () => {\r\n                    localStorage.setItem('token',JSON.stringify(res.token));\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    handleLogin(){\r\n        fetch('/loginUser',{\r\n            method : \"POST\",\r\n            headers : {\r\n                'Content-Type' : 'application/json'\r\n            },\r\n            body : JSON.stringify({email : this.state.email, uname : this.state.username, pass : this.state.password})\r\n            }).then(res => res.json()).then(res => {\r\n            //res should have token.\r\n                if(res.err){\r\n                    alert(res.err);\r\n                } else if(res.token) {\r\n                    console.log(res.token);\r\n                    localStorage.setItem('token',JSON.stringify(res.token));\r\n                    this.setState({auth : true});\r\n                }\r\n            });\r\n    }\r\n\r\n    render(){\r\n        if(this.state.auth){\r\n            return (\r\n                    <div>\r\n                        <h1 style={{margin : '10px'}}>Login Successful!</h1>\r\n                        <br/>\r\n                        <Link to='/user'>\r\n                            <Button style={{margin : '10px'}} color='success'>Home</Button>\r\n                        </Link>\r\n                    </div>\r\n            );\r\n        } else {\r\n            return(\r\n                <div className='body-login'>\r\n                    <div className=\"form\">\r\n                        <form onSubmit={(e) => {e.preventDefault()}}>\r\n                            <h1>Login/Signup</h1>\r\n                            <div className=\"fields\">\r\n                                <div className=\"input-grp\">\r\n                                    <input onChange ={(e) => {this.setState({email : e.target.value})}} value = {this.state.email} type=\"email\" placeholder=\"Email\" autoComplete=\"nope\"/>\r\n                                </div>\r\n                                <div className=\"input-grp\">\r\n                                    <input onChange ={(e) => {this.setState({username : e.target.value})}} value = {this.state.username} type=\"text\" placeholder=\"Username\" autoComplete=\"new-username\"/>\r\n                                </div>\r\n                                <div className=\"input-grp\">\r\n                                    <input onChange ={(e) => {this.setState({password : e.target.value})}} value = {this.state.password} type=\"password\" placeholder=\"Password\" autoComplete=\"new-password\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"buttons\">\r\n                                <button onClick={this.handleRegister}>Register</button>\r\n                                <button onClick={this.handleLogin}>Sign in</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\n","D:\\Coding\\Web\\socialBlog\\client\\src\\User.js",["46","47"],"import React, {useEffect} from 'react';\r\nimport {NavBar, Footer} from './NavBar.js'\r\nimport {ListGroup, ListGroupItem, Spinner, Button, TabContent, TabPane, Nav, NavItem, NavLink, Form, FormGroup, Label, Input, FormText} from 'reactstrap';\r\nimport loading from './loading.webp'\r\nimport Posts from './Posts.js'\r\n\r\nfunction RenderUsers({list}){\r\n    return <ListGroup>\r\n        {list.map((ele,i) => <ListGroupItem key={i}>{ele}</ListGroupItem>)}\r\n    </ListGroup>\r\n}\r\n\r\nfunction RenderPosts(props){\r\n    // useEffect(() => {console.log(props)});\r\n    return(\r\n        <React.Fragment>\r\n            {props.state.delState}\r\n            {!props.state.delState ?            \r\n            <Button onClick={props.changeDelState} color=\"danger\" style={{margin: \"25px 0px 0px 25px\"}}>Delete Posts</Button> : \r\n            <Button onClick={props.changeDelState} color=\"success\" style={{margin: \"25px 0px 0px 25px\"}}>Cancel</Button>\r\n            }\r\n            {props.state.delState ? <Button onClick={props.deleteAll} color=\"danger\" style={{margin: \"25px 0px 0px 25px\"}}>Delete All</Button> : null}\r\n            {props.state.delState ? <h6 style={{margin : \"10px\"}}>Please select posts to delete</h6> : null}\r\n            <Posts incDel={!props.state.delState} storedPids={props.state.delPosts} clickMethod={props.addDelPost} content={props.state.getPosts}></Posts>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default class User extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {followReq : false, following : [], delPosts : [], netPosts : [], delState : false, activeTab : 1, getPosts : [], FormDesc : \"\", FormAccess : \"Private\", FormTitle : \"\"}\r\n        this.toggle = this.toggle.bind(this);\r\n        this.createPost = this.createPost.bind(this);\r\n        this.changeDelState = this.changeDelState.bind(this);\r\n        this.addDelPost = this.addDelPost.bind(this);\r\n        this.deleteAll = this.deleteAll.bind(this);\r\n    }\r\n\r\n    deleteAll(){\r\n        if(this.state.delPosts.length > 0){\r\n            // console.log(\"SENDING: \", this.state.delPosts)\r\n            fetch('/deletePosts', {\r\n                method : \"DELETE\",\r\n                headers : {\r\n                    Authorization : \"Bearer \" + localStorage.getItem('token'),\r\n                    'Content-Type' : \"application/json\"\r\n                },\r\n                body : JSON.stringify(this.state.delPosts)\r\n            }).then(res => res.json()).then(res => {\r\n                if(res.err)\r\n                    alert(res.err)\r\n                this.setState({delState : false, delPosts : []});\r\n            })\r\n        }\r\n    }\r\n\r\n    addDelPost(pid){ \r\n        if(this.state.delPosts.find(ele => ele === pid)) {\r\n            this.setState((s,p) => {\r\n                var temp = s.delPosts.filter(ele => ele !== pid)\r\n                return {delPosts : temp};\r\n            })\r\n        } else {\r\n            this.setState((s,p) => {\r\n                var temp = [...s.delPosts];\r\n                temp.push(pid);\r\n                return {delPosts : temp};\r\n            })\r\n        }\r\n    }\r\n\r\n    changeDelState(){\r\n        console.log('clicked');\r\n        this.setState({delState : !this.state.delState})\r\n    }\r\n\r\n    createPost(e){\r\n    e.preventDefault();\r\n        fetch('/addPost', {\r\n            method : \"POST\",\r\n            headers : {\r\n            Authorization : \"Bearer \" + localStorage.getItem('token'),\r\n            'Content-Type' : 'application/json'\r\n            }, \r\n            body : JSON.stringify({TITLE : this.state.FormTitle, _DESC : this.state.FormDesc, ACCESS : this.state.FormAccess})       \r\n        }).then(res => res.json()).then(res => {\r\n            console.log(res);\r\n            if(res.err){\r\n                alert(res.err);\r\n            } else {\r\n                var newstate = JSON.parse(JSON.stringify(this.state.getPosts));\r\n                newstate.push(res.newPost);\r\n                console.log(newstate);\r\n                this.setState((s,p) => {\r\n                    alert('state update');\r\n                    return Object.assign(s,{getPost : newstate, activeTab : 1})\r\n                });\r\n            }\r\n        })\r\n    }\r\n\r\n    getFollowing(){\r\n        if(this.state.following.length  === 0){\r\n            fetch('/getFollowing', {\r\n                method : \"GET\",\r\n                headers : {\r\n                    Authorization : \"Bearer \" + localStorage.getItem('token')\r\n                },\r\n            }).then(res => res.json()).then(res => {\r\n                // console.log(res);\r\n                if(res.err){\r\n                    alert(res.err);\r\n                } else {\r\n                    var uids = res.following.map(ele => ele['TOUID']);\r\n                    // console.log(uids);\r\n                    uids.forEach((uid,i) => {\r\n                        if(i === uids.length - 1){\r\n                            this.setState({followReq : true});\r\n                        }\r\n                        fetch('/getName/' + uid, {method : \"GET\"}).then(res => res.json()).then(res => {\r\n                            // console.log(res);\r\n                            this.setState((s,p) => {\r\n                                var t = [...s.following]; \r\n                                t.push(res.name[0]['UNAME']);\r\n                                return {following : t};\r\n                            })\r\n                            // res => {this.setState({userName : res.name[0]['UNAME']})}\r\n                        }\r\n                        )\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('/user/posts', {\r\n            method : \"GET\",\r\n            headers : {\r\n                Authorization : \"Bearer \" + localStorage.getItem('token')\r\n            },\r\n        }).then(res => res.json()).then(res => {\r\n            this.setState({getPosts : res.posts, initReq : true});\r\n        })\r\n    }\r\n\r\n    getAllPosts(){\r\n        fetch('/netPosts', {\r\n            method : \"GET\",\r\n            headers : {\r\n                Authorization : \"Bearer \" + localStorage.getItem('token')\r\n            }\r\n        }).then(res => res.json()).then(res => {\r\n            this.setState({netPosts : res.posts});\r\n        })\r\n    }\r\n\r\n    toggle(i){\r\n        if(i === 2)\r\n            this.getFollowing();\r\n        if(i === 3)\r\n            this.getAllPosts();\r\n        this.setState({activeTab : i});\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className='body-wrap'>\r\n                <NavBar/>\r\n                    <Nav tabs>\r\n                        <NavItem>\r\n                            <NavLink style={{cursor : \"pointer\"}} onClick={() => {this.toggle(1)}} className={this.state.activeTab === 1 ? 'active' : undefined}>\r\n                                Your Posts\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink style={{cursor : \"pointer\"}} onClick={() => {this.toggle(2)}} className={this.state.activeTab === 2 ? 'active' : undefined}>\r\n                               People you follow\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink style={{cursor : \"pointer\"}} onClick={() => {this.toggle(3)}} className={this.state.activeTab === 3 ? 'active' : undefined}>\r\n                                Posts from People you follow\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink style={{cursor : \"pointer\"}} onClick={() => {this.toggle(4)}} className={this.state.activeTab === 4 ? 'active' : undefined}>\r\n                                Create Post\r\n                            </NavLink>\r\n                        </NavItem>\r\n                    </Nav>\r\n                    <TabContent activeTab={this.state.activeTab}>\r\n                        <TabPane tabId={1}>\r\n                            {this.state.getPosts.length === 0 ? \r\n                            this.state.initReq ? <p>No Posts Found! </p> : <Spinner style={{margin:\"30px\"}}color='primary'/> : <RenderPosts {...this}/>}\r\n                        </TabPane>\r\n                        <TabPane tabId={2}>\r\n                            {this.state.following ? <RenderUsers list={this.state.following}/> : (this.state.followReq ? <p>You Don't follow anyone!</p> : <Spinner style={{margin:\"30px\"}}color='primary'/>)}\r\n                        </TabPane>\r\n                        <TabPane tabId={3}>\r\n                        {this.state.following ? <Posts content={this.state.netPosts}/> : <Spinner style={{margin:\"30px\"}}color='primary'/>}\r\n                        </TabPane>\r\n                        <TabPane tabId={4}>\r\n                            <div style={{maxWidth : \"50%\", marginLeft : \"50px\"}}>\r\n                                <Form style={{backgroundColor : \"white\", margin : \"10px\", padding : \"10px\", borderRadius : \"5px\"}}>\r\n                                    <FormGroup>\r\n                                        <Label for=\"access\">Select an Access Type</Label>\r\n                                        <Input value={this.state.FormAccess} onChange={(e) => {this.setState({FormAccess : e.target.value})}} type=\"select\" name=\"access\" id=\"access\">\r\n                                            <option>Private</option>\r\n                                            <option>Public</option>\r\n                                        </Input>\r\n                                        <FormText>Note: Public Notes are visible globally, whereas Private Notes are only visible to you.</FormText>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label for=\"title\">Title</Label>\r\n                                        <Input value={this.state.FormTitle} onChange={(e) => {this.setState({FormTitle : e.target.value})}} type=\"text\" name=\"title\" id=\"_title\" placeholder=\"Please insert your title here\" />\r\n                                        <FormText>Note: Your Post Title can be at most 20 characters.</FormText>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label for=\"_desc\">Description</Label>\r\n                                        <Input value={this.state.FormDesc} onChange={(e) => {this.setState({FormDesc : e.target.value})}} type=\"text\" name=\"desc\" id=\"_desc\" placeholder=\"Please insert your description here\" />\r\n                                        <FormText>Note: Your Post Description can be at most 140 characters.</FormText>\r\n                                    </FormGroup>\r\n                                    <Button onClick={this.createPost}>Submit</Button>\r\n                                </Form>\r\n                            </div>\r\n                        </TabPane>\r\n                    </TabContent>\r\n                <Footer/>\r\n            </div>\r\n        );\r\n    }\r\n};","D:\\Coding\\Web\\socialBlog\\client\\src\\Posts.js",["48"],"D:\\Coding\\Web\\socialBlog\\client\\src\\Profile.js",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":1,"column":14,"nodeType":"55","messageId":"56","endLine":1,"endColumn":22},{"ruleId":"53","severity":1,"message":"57","line":1,"column":16,"nodeType":"55","messageId":"56","endLine":1,"endColumn":24},{"ruleId":"53","severity":1,"message":"58","line":1,"column":16,"nodeType":"55","messageId":"56","endLine":1,"endColumn":25},{"ruleId":"53","severity":1,"message":"59","line":4,"column":8,"nodeType":"55","messageId":"56","endLine":4,"endColumn":15},{"ruleId":"53","severity":1,"message":"60","line":1,"column":36,"nodeType":"55","messageId":"56","endLine":1,"endColumn":42},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","'loading' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]